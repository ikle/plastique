#!/usr/bin/perl -Ilib
#
# Fuzzer script to detect Atmel ATF1502 MC Output Enable configuration
#
# Copyright (c) 2025 Alexei A. Smekalkine <ikle@ikle.ru>
#
# SPDX-License-Identifier: BSD-2-Clause
#

use strict;
use warnings;

use Atmel::F1500::MCC;
use Atmel::F1502;

#
# LAB A pins as GOE = [P12, P11, P13, P15, P2,  P7 ]
# LAB B pins as GOE = [P28, P27, P29, P31, P18, P23]
#

#
# Bit at column 11, middle, active-high	-- OE0 (2^0 = 1)
#
my %conf_0 = (
	'name'	=> 'OE0_',		# prefix name of source bits	(req)
	'lab'	=> 'A',			# LAB name to test

	'pins'	=> 'C44',
	'base'	=> ['[P1..P16].ck = GCK1;'],
	'on'	=> ['P{n}.d  = P{m};', 'P{n}.oe = P29;'],	# GOE3 (3)
	'off'	=> ['P{n}.d  = P{m};', 'P{n}.oe = P27;'],	# GOE2 (2)
);

#
# Bit at column 10, middle, active-high	-- OE1 (2^1 = 2)
#
my %conf_1 = (
	'name'	=> 'OE1_',		# prefix name of source bits	(req)
	'lab'	=> 'A',			# LAB name to test

	'pins'	=> 'C44',
	'base'	=> ['[P1..P16].ck = GCK1;'],
	'on'	=> ['P{n}.d  = P{m};', 'P{n}.oe = P29;'],	# GOE3 (3)
	'off'	=> ['P{n}.d  = P{m};', 'P{n}.oe = P28;'],	# GOE1 (1)
);

#
# Bit at column 11, outer,  active-high	-- OE2 (2^2 = 4)
#
my %conf_2 = (
	'name'	=> 'OE2_',		# prefix name of source bits	(req)
	'lab'	=> 'A',			# LAB name to test

	'pins'	=> 'C44',
	'base'	=> ['[P1..P16].ck = GCK1;'],
	'on'	=> ['P{n}.d  = P{m};', 'P{n}.oe = P18;'],	# GOE5 (5)
	'off'	=> ['P{n}.d  = P{m};', 'P{n}.oe = P28;'],	# GOE1 (1)
);

#
# Bit at column 11, middle, active-high	-- OE0 (2^0 = 1)
#
my %conf_3 = (
	'name'	=> 'OE0_',		# prefix name of source bits	(req)
	'lab'	=> 'A',			# LAB name to test

	'pins'	=> 'C44',
	'base'	=> ['[P1..P16].ck = GCK1;'],
	'on'	=> ['P{n}.d  = P{m};', 'P{n}.oe = P18 & OE1;'],	# PTOE (7)
	'off'	=> ['P{n}.d  = P{m};', 'P{n}.oe = P23;'],	# GOE6 (6)
);

#
# Bit at column 10, middle, active-high	-- OE1 (2^1 = 2)
#
my %conf_4 = (
	'name'	=> 'OE1_',		# prefix name of source bits	(req)
	'lab'	=> 'A',			# LAB name to test

	'pins'	=> 'C44',
	'base'	=> ['[P1..P16].ck = GCK1;'],
	'on'	=> ['P{n}.d  = P{m};', 'P{n}.oe = P23;'],	# GOE6 (6)
	'off'	=> ['P{n}.d  = P{m};', 'P{n}.oe = P31;'],	# GOE4 (4)
);

#
# Proposition:
#
# [OE2:OE0] -> [0, GOE1, GOE2, GOE3, GOE4, GOE5, GOE6, PTOE]
#
# PTOE = PM5 ? PT5 : 1	= !(!PT5 & PM5)
#

my $o = f1502_load ('db');

my $mcc_0 = f1502_mcc_search ($o, \%conf_0);
my $mcc_1 = f1502_mcc_search ($o, \%conf_1);
my $mcc_2 = f1502_mcc_search ($o, \%conf_2);
my $mcc_3 = f1502_mcc_search ($o, \%conf_3);
my $mcc_4 = f1502_mcc_search ($o, \%conf_4);

mcc_update ($o->{'mcc'}, $mcc_0) if defined $mcc_0;
mcc_update ($o->{'mcc'}, $mcc_1) if defined $mcc_1;
mcc_update ($o->{'mcc'}, $mcc_2) if defined $mcc_2;
mcc_update ($o->{'mcc'}, $mcc_3) if defined $mcc_3;	# to test PTOE
mcc_update ($o->{'mcc'}, $mcc_4) if defined $mcc_4;	# to test GOE4

f1502_report ($o);
f1502_save   ($o, 'db');

