#!/usr/bin/perl -Ilib
#
# Fuzzer script to detect Atmel ATF1502 MC Register Reset configuration
#
# Copyright (c) 2025 Alexei A. Smekalkine <ikle@ikle.ru>
#
# SPDX-License-Identifier: BSD-2-Clause
#

use strict;
use warnings;

use Atmel::F1500::MCC;
use Atmel::F1502;

#
# PM3 -- Mask-out PT3 -- disable for OR, enable for PTAR
#
# Bit at column 0, outer,  active-high	-- PM3
#
# GAR = 0
# ar  = PT3 & PM3 | GCLR & GAR
#
my %conf_pm3 = (
	'name'	=> 'PM3_',		# prefix name of source bits	(req)
	'lab'	=> 'A',			# LAB name to test

	'base'	=> ['[P1..P16].ck = GCK1;'],
	'on'	=> ['P{n}.d  = OE1 & P{n} # P{m} & GCLR;', 'P{n}.ar = P19 & P20;'],
	'off'	=> ['P{n}.d  = OE1 & P{n} # P{m} & GCLR # P19 & GCK2;'],
);

#
# GAR -- Global Async Reset Enable
#
# Bit at column 9, middle, active-low	-- !GAR
#
# PM3 = 0
# ar  = PT3 & PM3 | GCLR & GAR
#
my %conf_gar = (
	'name'	=> 'GAR_',		# prefix name of source bits	(req)
	'lab'	=> 'A',			# LAB name to test

	'base'	=> ['[P1..P16].d  = [P17..P32];', '[P1..P16].ck = GCK1;'],
	'on'	=> ['P{n}.ar = GCLR;'],
);

my $o = f1502_load ('db');

my $mcc_pm3 = f1502_mcc_search ($o, \%conf_pm3);
my $mcc_gar = f1502_mcc_search ($o, \%conf_gar);

mcc_update ($o->{'mcc'}, $mcc_pm3) if defined $mcc_pm3;
mcc_update ($o->{'mcc'}, $mcc_gar) if defined $mcc_gar;

f1502_report ($o);
f1502_save   ($o, 'db');

