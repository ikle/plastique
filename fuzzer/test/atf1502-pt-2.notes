# Product Term Fuzzing

## 1. 2^i != 0, make N[]

0: 01110110 11110111 11100111 01111111 11100110  11101111 01101110 01101111 11110110 11100111
1: 01111110 11101111 01101111 11101111 01101110  11100111 01110110 11111110 01110111 01101110
2: 11110111 01110110 11101110 11101111 11101111  01101110 11101111 01101110 01110111 01101110
3: 11111111 11111111 11101111 11101111 11101111  01110110 01100110 01110111 11101110 11110110
4: 01111111 01110111 01101111 11111110 11110111  11110110 11101110 11111111 01101110 11101110
5: 11101111 11111111 11110110 11111111 01111110  11101111 11111111 11101110 11111111 11111111

## 2. 2^i == 0, make P[]

0: 11101111 01101110 01111110 11100110 01111111  01110110 11110111 11110110 01101111 01111110
1: 11100111 01110110 11110110 01110110 11110111  01111110 11101111 01100111 11101110 11110111
2: 01101110 11101111 01110111 01110110 01110110  11110111 01110110 11110111 11101110 11110111
3: 01100110 01100110 01110110 01110110 01110110  11101111 11111111 11101110 01110111 01101111
4: 11100110 11101110 11110110 01100111 01101110  01101111 01110111 01100110 11110111 01110111
5: 01110110 01100110 01101111 01100110 11100111  01110110 01100110 01110111 01100110 01100110

## 3. 2^i != 0, erase N[i] if N[i] == P[i]  -- erase all 3F for readility only, see step 5

0: 0--10--0 1--10--1 1--00--1 0--11--1 1--00--0  1--01--1 0--01--0 0--01--1 1--10--0 1--00--1
1: 0--11--0 1--01--1 0--01--1 1--01--1 0--01--0  1--00--1 0--10--0 1--11--0 0--10--1 0--01--0
2: 1--10--1 0--10--0 1--01--0 1--01--1 1--01--1  0--01--0 1--01--1 0--01--0 0--10--1 0--01--0
3: 1--11--1 1--11--1 1--01--1 1--01--1 1--01--1  0--10--0 0--00--0 0--10--1 1--01--0 1--10--0
4: 0--11--1 0--10--1 0--01--1 1--11--0 1--10--1  1--10--0 1--01--0 1--11--1 0--01--0 1--01--0
5: 1--01--1 1--11--1 1--10--0 1--11--1 0--11--0  1--01--1 1--11--1 1--01--0 1--11--1 1--11--1

## 4. 2^i == 0, erase P[i] if P[i] == N[i]  -- erase all 3F for readility only, see steo 5

0: 1--01--1 0--01--0 0--11--0 1--00--0 0--11--1  0--10--0 1--10--1 1--10--0 0--01--1 0--11--0
1: 1--00--1 0--10--0 1--10--0 0--10--0 1--10--1  0--11--0 1--01--1 0--00--1 1--01--0 1--10--1
2: 0--01--0 1--01--1 0--10--1 0--10--0 0--10--0  1--10--1 0--10--0 1--10--1 1--01--0 1--10--1
3: 0--00--0 0--00--0 0--10--0 0--10--0 0--10--0  1--01--1 1--11--1 1--01--0 0--10--1 0--01--1
4: 1--00--0 1--01--0 1--10--0 0--00--1 0--01--0  0--01--1 0--10--1 0--00--0 1--10--1 0--10--1
5: 0--10--0 0--00--0 0--01--1 0--00--0 1--00--1  0--10--0 0--00--0 0--10--1 0--00--0 0--00--0

## 5. 2^i == 0, erase P[i] if P[i] != ~N[i]

0: 1--01--1 0--01--0 0--11--0 1--00--0 0--11--1  0--10--0 1--10--1 1--10--0 0--01--1 0--11--0
1: 1--00--1 0--10--0 1--10--0 0--10--0 1--10--1  0--11--0 1--01--1 0--00--1 1--01--0 1--10--1
2: 0--01--0 1--01--1 0--10--1 0--10--0 0--10--0  1--10--1 0--10--0 1--10--1 1--01--0 1--10--1
3: 0--00--0 0--00--0 0--10--0 0--10--0 0--10--0  1--01--1 1--11--1 1--01--0 0--10--1 0--01--1

4: 1--00--0 1--01--0 1--10--0 0--00--1 0--01--0  0--01--1 0--10--1 0--00--0 1--10--1 0--10--1
5: 0--10--0 0--00--0 0--01--1 0--00--0 1--00--1  0--10--0 0--00--0 0--10--1 0--00--0 0--00--0

# 6. P[] in hex

0: 3  05  3 4  25  4 2  F1  4 1  E0  0 2  F1  3  C  7A  C B  DA  B D  58  6 6  87  9 6  79  E
1: 1  20  0 1  01  0 1  12  2 0  00  1 2  01  2  0  21  1 0  10  1 0  20  2 1  10  1 0  10  1

# 7. Map mux index to T-index in hex

mux	dev	src	T	T-hex

0	P22		19	13
1	F13	F22	32	20
2	P8		5	5
3	P6		3	3
4	P23		20	14
5	P5		2	2
6	P24		21	15
7	P7		4	4
8	P21		18	12
9	F14	F21	31	1F
10	F12	F23	33	21
11	F9	F26	36	24
12	P4		1	1
13	P17		14	E
14	P3		0	0
15	P19		16	10
16	F11	F24	34	22
17	P18		15	F
18	P20		17	11
19	F10	F25	35	23
20	P15		12	C
21	F6	F29	39	27
22	P29		26	1A
23	P31		28	1C
24	P14		11	B
25	P32		29	1D
26	P13		10	A
27	P30		27	1B
28	P16		13	D
29	F8	F27	37	25
30	P11		8	8
31	F3	F28	38	26
32	P25		22	16
33	P27		24	18
34	P10		7	7
35	P28		25	19
36	P9		6	6
37	P26		23	17
38	P12		9	9
39	F4	F20	30	1E

# 6. P[] in hex + mux in dec + separator remove

0: 3  05  34  25  42  F1  41  E0  02  F1  3C  7A  CB  DA  BD  58  66  87  96  79  E
1: 1  2    1   1   1  12  2       12   1  2   21  1   1   1   2   21  1   1   1   1

0: 0  12  34  56  78  90  12  34  56  78  90  12  34  56  78  90  12  34  56  78  9
1:                     1  11  11  11  11  12  22  22  22  22  23  33  33  33  33  3

